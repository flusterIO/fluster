name: fluster
publish_to: none
environment:
  sdk: ^3.8.0
packages:
  - packages/**
  - apps/**
scripts:
  test_flutter:
    name: Test Flutter
    description: Test the Flutter & Dart side of the workspace.
    run: cd $FLUSTER_NATIVE_ROOT/apps/fluster && flutter test $FLUSTER_NATIVE_ROOT/apps/fluster --coverage --no-pub --coverage-path $FLUSTER_NATIVE_ROOT/apps/fluster/.coverage/lcov.info && flutter pub global run test_cov_console --file=$FLUSTER_NATIVE_ROOT/apps/fluster/.coverage/lcov.info
  test_go:
    name: Test Golang
    description: Test Golang Projects
    steps:
      - cd $FLUSTER_NATIVE_ROOT/packages/fluster_cli && go test -cover -coverprofile $FLUSTER_NATIVE_ROOT/packages/fluster_cli/.coverage/coverage.out
  format_everything:
    name: Format Everything
    description: Just as the name implies, formats everything
    step:
      - dart fix
      - pnpm syncpack format
  generate_icons:
    name: Generate Icons
    description: Generate icons using flutter_launcher_icons.
    run: cd $FLUSTER_NATIVE_ROOT/apps/fluster/ && flutter pub run flutter_launcher_icons -f $FLUSTER_NATIVE_ROOT/apps/fluster/flutter_launcher_icons.yaml
  generate_docs:
    name: Generate Docs
    description: Generate Docs throughout the monorepo.
    steps:
      - cargo doc --workspace --no-deps
  generate_docs_with_deps:
    name: Generate Docs with dependencies for offline development
    description: Generate Docs throughout the monorepo with dependencies included.
    steps:
      - cargo doc --workspace
  test_rust:
    name: Test with coverage
    description: Test rust throughout the workspace.
    run: cargo llvm-cov --html
  build_rust:
    name: buildRust
    description: Compile using flutter_rust_bridge in the fluster_native_interface package.
    steps:
      - trash $FLUSTER_NATIVE_ROOT/packages/fluster_native_interface/lib/src/rust/**
      - cd $FLUSTER_NATIVE_ROOT/packages/fluster_native_interface && flutter_rust_bridge_codegen generate
  build_go:
    name: Build all Golang packages
    description: Build all Golang packages
    steps:
      - cd $FLUSTER_NATIVE_ROOT/packages/fluster_go/ && go build
      - cd $FLUSTER_NATIVE_ROOT/packages/fluster_internal_workspace/ && go build
  build_desktop:
    name: Build Desktop Apps
    steps:
      - melos run generate_icons
      - melos run build_rust
      - melos run build_fluster
  build_protos:
    name: Build Protos
    description: Build and distribute protobuffs to all languages
    steps:
      - $FLUSTER_NATIVE_ROOT/packages/fluster_internal_workspace/fluster_internal_workspace generate_grpc_script
      - $FLUSTER_NATIVE_ROOT/packages/fluster_grpc/scripts/clean.sh
      - cd $FLUSTER_NATIVE_ROOT/packages/fluster_grpc && $FLUSTER_NATIVE_ROOT/packages/fluster_grpc/scripts/distribute_proto.sh
  build_native:
    name: Build Native
    description: Builds the entire desktop application apart from flutter itself
    steps:
      - melos run build_protos
      - melos run generate_docs
      - melos run build_rust
      - melos run build_go
      - melos run build_ts
  build_node:
    name: Build node package
    steps:
      - pnpm syncpack format
      - cd $FLUSTER_NATIVE_ROOT/packages/fluster_ts && pnpm build
  distribute_node:
    name: Build node package
    steps:
      - melos run build_node
      - cd $FLUSTER_NATIVE_ROOT/packages/fluster_ts && npm publish
  build_python:
    name: Build Python Wheel
    run: cd $FLUSTER_NATIVE_ROOT/packages/fluster_py && python -m build
  distribute_python:
    name: Distribute Python to pypi
    description: Distribute Python to pypi
    run: twine upload $FLUSTER_NATIVE_ROOT/packages/fluster_py/dist/
  build_workspace_tools:
    name: Build Go workspace tools
    description: Build Go workspace tools
    run: cd $FLUSTER_NATIVE_ROOT/packages/fluster_internal_workspace && go build
  build_all:
    name: Build Everything
    steps:
      - $FLUSTER_NATIVE_ROOT/packages/fluster_internal_workspace/fluster_internal_workspace set_distributed_versions
      - melos run build_protos
      - melos run build_native
  distribute_all:
    name: Distribute Everything
    steps:
      - melos run build_all
      - melos run distribute_python
      - melos run distribute_node
