[package]
name = "fluster_db"
version.workspace = true
authors.workspace = true
description.workspace = true
documentation.workspace = true
edition.workspace = true

# NOTE: Had to turn this off to allow this package to be imported. Cargo was throwing an error that it was unable to find it with this set, but it was recommended to be set this way to embed a rust database. I'm not sure if this applies to embedding the surreal server and using the file system, but if this is required, turn this back on.
# [lib]
# crate-type = ["cdylib", "staticlib"]

[dependencies]
chrono = { workspace = true }
flutter_rust_bridge = { workspace = true }
gray_matter = { workspace = true }
serde = { workspace = true, features = ["derive"] }
surrealdb = { workspace = true, features = [
    "kv-surrealkv",
    "protocol-ws",
    "rustls",
] }
tokio = { version = "1.44.2", features = ["macros", "rt-multi-thread"] }
rayon = { workspace = true }
validator = "0.20.0"
fluster_types = { path = "../fluster_types/" }
dirs.workspace = true
log = "0.4.27"
rust-embed.workspace = true
diesel = { workspace = true, features = [
    "chrono",
    "postgres",
    "r2d2",
    "serde_json",
] }
wasm-bindgen = { workspace = true }
diesel-async = { workspace = true, features = ["tokio-postgres", "postgres"] }
diesel-derive-enum = { version = "2.1.0", features = ["postgres"] }
dotenvy = { workspace = true }
biblatex = "0.10.0"
tsify = "0.5.5"
serde_json.workspace = true
regex = "1.11.1"
strum = { version = "0.27.1", features = ["strum_macros"] }
strum_macros = "0.27.1"

[dev-dependencies]
fluster_test_utils = { path = "../fluster_test_utils" }

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(frb_expand)'] }
