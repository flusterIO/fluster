// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import '../../../lib.dart';
import '../../errors/parsing_errors.dart';
import '../frontmatter.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Future < Self >>>
abstract class FutureSelf implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Iter < String >>>
abstract class IterString implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<int>>
abstract class Int implements RustOpaqueInterface {}

class MdxNote {
  final Thing? id;
  final String path;
  final String content;
  final String title;
  final FrontMatter matter;

  const MdxNote({
    this.id,
    required this.path,
    required this.content,
    required this.title,
    required this.matter,
  });

  static Future<MdxNote> fromFilePath({
    required String filePath,
    required MatterYaml matter,
  }) => RustLib.instance.api.crateApiModelsNotesMdxNoteModelMdxNoteFromFilePath(
    filePath: filePath,
    matter: matter,
  );

  /// fileContent is the *entire* file contents, including front matter.
  static Future<FutureSelf> fromRawContent({
    required String fileContents,
    required String path,
    required MatterYaml matter,
  }) =>
      RustLib.instance.api.crateApiModelsNotesMdxNoteModelMdxNoteFromRawContent(
        fileContents: fileContents,
        path: path,
        matter: matter,
      );

  Future<void> getTitleFromContents({
    required IterString fileContentsByLine,
    required Int depth,
  }) => RustLib.instance.api
      .crateApiModelsNotesMdxNoteModelMdxNoteGetTitleFromContents(
        that: this,
        fileContentsByLine: fileContentsByLine,
        depth: depth,
      );

  @override
  int get hashCode =>
      id.hashCode ^
      path.hashCode ^
      content.hashCode ^
      title.hashCode ^
      matter.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MdxNote &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          path == other.path &&
          content == other.content &&
          title == other.title &&
          matter == other.matter;
}
