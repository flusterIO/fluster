// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `get_js_parser`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<BibEntryEntity>>
abstract class BibEntryEntity implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FlusterError>>
abstract class FlusterError implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Surreal < Db >>>
abstract class SurrealDb implements RustOpaqueInterface {}

class BibtexFile {
  final String? path;
  final List<BibEntryEntity> entries;

  const BibtexFile({this.path, required this.entries});

  static Future<BibtexFile> fromFilesystemPath({required String fspath}) =>
      RustLib.instance.api
          .crateApiModelsBibliographyBibFileBibtexFileFromFilesystemPath(
            fspath: fspath,
          );

  static Future<BibtexFile> fromRawFileContent({required String fileContent}) =>
      RustLib.instance.api
          .crateApiModelsBibliographyBibFileBibtexFileFromRawFileContent(
            fileContent: fileContent,
          );

  Future<void> saveEntries({required SurrealDb db}) => RustLib.instance.api
      .crateApiModelsBibliographyBibFileBibtexFileSaveEntries(
        that: this,
        db: db,
      );

  @override
  int get hashCode => path.hashCode ^ entries.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BibtexFile &&
          runtimeType == other.runtimeType &&
          path == other.path &&
          entries == other.entries;
}
