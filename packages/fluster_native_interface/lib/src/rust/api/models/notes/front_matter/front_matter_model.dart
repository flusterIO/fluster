// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../../frb_generated.dart';
import '../../../../lib.dart';
import '../../taggable/tag_model.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `fmt`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Pod>>
abstract class Pod implements RustOpaqueInterface {}

class FrontMatterEntity {
  final Thing? id;
  final String title;
  final String? summary;
  final List<Tag> tags;

  /// This is the `id` field in the user's frontmatter. This is called `note_id` to distinguish
  /// it from the `id` field produced by surrealdb.
  final String? noteId;

  const FrontMatterEntity({
    this.id,
    required this.title,
    this.summary,
    required this.tags,
    this.noteId,
  });

  static Future<FrontMatterEntity> default_() => RustLib.instance.api
      .crateApiModelsNotesFrontMatterFrontMatterModelFrontMatterEntityDefault();

  static Future<FrontMatterEntity> fromGrayMatter({Pod? pod}) => RustLib
      .instance
      .api
      .crateApiModelsNotesFrontMatterFrontMatterModelFrontMatterEntityFromGrayMatter(
        pod: pod,
      );

  @override
  int get hashCode =>
      id.hashCode ^
      title.hashCode ^
      summary.hashCode ^
      tags.hashCode ^
      noteId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FrontMatterEntity &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          summary == other.summary &&
          tags == other.tags &&
          noteId == other.noteId;
}
