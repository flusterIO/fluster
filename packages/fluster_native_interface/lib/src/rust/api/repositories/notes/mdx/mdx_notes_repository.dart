// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../../frb_generated.dart';
import '../../../../lib.dart';
import '../../../models/nested_models/fluster_datetime/fluster_time.dart';
import '../../../models/notes/front_matter/front_matter_model.dart';
import '../../../models/notes/mdx/mdx_note.dart';
import '../../../models/taggable/tag_model.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'query_params.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `fmt`

class MdxNotesRepository {
  final String tableName;

  const MdxNotesRepository({required this.tableName});

  static Future<MdxNotesRepository> default_() => RustLib.instance.api
      .crateApiRepositoriesNotesMdxMdxNotesRepositoryMdxNotesRepositoryDefault();

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<MdxNotesRepository> newInstance() => RustLib.instance.api
      .crateApiRepositoriesNotesMdxMdxNotesRepositoryMdxNotesRepositoryNew();

  Future<List<MdxNoteEntity>> search({
    required MdxNoteQueryParams query,
  }) => RustLib.instance.api
      .crateApiRepositoriesNotesMdxMdxNotesRepositoryMdxNotesRepositorySearch(
        that: this,
        query: query,
      );

  @override
  int get hashCode => tableName.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MdxNotesRepository &&
          runtimeType == other.runtimeType &&
          tableName == other.tableName;
}
